{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/scripts/classes/Card.js","src/scripts/classes/CardForm.js","src/scripts/classes/CardList.js","src/scripts/classes/Modal.js","src/scripts/helpers/card.js","src/scripts/script.js"],"names":[],"mappings":"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","file":"script.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import cardHelper from '../helpers/card.js';\n\nexport default class {\n    constructor({ number, comment, brandImageUrl }) {\n        this.id = `card${cardHelper.removeSpaces(number)}`;\n        this.number = number;\n        this.comment = comment;\n        this.brandImageUrl = brandImageUrl;\n    };\n\n    getAsHtml(buttonHandler) {\n        const card = document.createElement('div');\n        const button = document.createElement('button');\n        \n        card.setAttribute('class', 'list-card');\n        card.innerHTML = `\n            <div class=\"list-card__comment\">${this.comment}</div>\n            <div class=\"list-card__number\">${cardHelper.splitByFourNumbers(this.number)}</div>\n            <img src=\"${this.brandImageUrl}\"/>`;\n        \n        button.setAttribute('type', 'button');\n        button.innerText = 'Remove';\n        button.onclick = buttonHandler;\n        card.append(button)\n\n        return card;\n    };\n}\n","import Card from './Card.js'\r\nimport cardHelper from '../helpers/card.js';\r\n\r\nconst cardInfoApiKey = 'b09f0613ed846051bfe94c7174ab16e8';\r\nconst cardInfoApiUrl = 'https://api.cardinfo.online';\r\n\r\nconst messages = {\r\n    cardNumberRequired: 'Card Number is required',\r\n    cardNumberLength: 'Your card number should has 16 symbols',\r\n    cardType: 'Your card must be only Visa or MasterCard',\r\n    cardTypeApiRequest: 'Error in API request for card number validation',\r\n    cardIsAlreadyExists: 'You already has card with this number',\r\n    cardCommentLength: 'Your comment should has maximum 1024 symbols',\r\n};\r\n\r\nexport default class {\r\n    constructor(selectors, cardModal, cardList) {\r\n        this.selectors = selectors;\r\n        this.hasErrors = false;\r\n        this.numberError = '';\r\n        this.commentError = '';\r\n        this.cardModal = cardModal;\r\n        this.cardList = cardList;\r\n\r\n        this.cardLogoImage = '';\r\n        this.cardNumber = '';\r\n        this.cardComment = '';\r\n\r\n        this.handleCardNumberInput();\r\n        this.handleCardCommentInput();\r\n        this.handleCreateCardButton();\r\n        this.handleOpenModal();\r\n    };\r\n    cardNumberRequired(cb) {\r\n        if(!this.cardNumber) {\r\n            cb(messages.cardNumberRequired);\r\n        } else {\r\n            this.cardNumberLength(cb);\r\n        }\r\n    };\r\n    cardNumberLength(cb) {\r\n        if(this.cardNumber.replace(' ', '').length !== 16) {\r\n            cb(messages.cardNumberLength);\r\n        } else {\r\n            this.cardIsAlreadyExists(cb);\r\n        }\r\n    };\r\n    cardIsAlreadyExists(cb) {\r\n        if(!!this.cardList.cards.find(item => item.number === this.cardNumber)){\r\n            cb(messages.cardIsAlreadyExists);\r\n        } else {\r\n            this.cardType(cb);\r\n        }      \r\n    };\r\n    cardType(cb) {\r\n        const requestUrl = `${cardInfoApiUrl}?input=${cardHelper.getFirstSixNumbers(this.cardNumber)}&apiKey=${cardInfoApiKey}`;\r\n        fetch(requestUrl).then((response) => response.json())\r\n        .then((data) => {\r\n            if((data.brandAlias === 'mastercard') || (data.brandAlias === 'visa')) {                \r\n                cb();\r\n                this.cardLogoImage = data.brandLogoOriginalPng;\r\n            } else {\r\n                cb(messages.cardType);\r\n            }\r\n        }).catch(() => {\r\n            cb(messages.cardTypeApiRequest);\r\n        })\r\n    };\r\n    cardCommentLength(cb) {\r\n        if(this.cardComment.length > 1024) {\r\n            cb(messages.cardCommentLength);\r\n        } else {\r\n            cb();\r\n        };\r\n    };\r\n    validateNumber(cb) {\r\n        this.cardNumberRequired((message) => {\r\n            if(message) {\r\n                this.hasErrors = true;\r\n                this.selectors.numberError.innerText = message;\r\n            } else {\r\n                this.hasErrors = false;\r\n                this.selectors.numberError.innerText = '';\r\n                if(cb) cb();\r\n            }\r\n        })\r\n    };\r\n    validateComment() {\r\n        this.cardCommentLength((message) => {\r\n            if(message) {\r\n                this.hasErrors = true;\r\n                this.selectors.commentError.innerText = message;\r\n            } else {\r\n                this.hasErrors = false;\r\n                this.selectors.commentError.innerText = '';\r\n            }\r\n        })\r\n    };\r\n    handleCardNumberInput() {\r\n        this.selectors.numberInput.onchange = (e) => {\r\n            const number = e.target.value;\r\n            this.cardNumber = number;\r\n            this.validateNumber();\r\n        };\r\n    };\r\n    handleCardCommentInput() {\r\n        this.selectors.commentInput.onchange = (e) => {\r\n            const comment = e.target.value;\r\n            this.cardComment = comment;\r\n            this.validateComment();\r\n        };       \r\n    };\r\n    handleCreateCardButton () {\r\n        this.cardModal.saveButtonHandler(() => {\r\n            this.validateNumber(() => {\r\n                const card = new Card({\r\n                    number: this.cardNumber,\r\n                    comment: this.cardComment,\r\n                    brandImageUrl: this.cardLogoImage\r\n                });\r\n                this.cardList.add(card);\r\n                this.cardModal.hide();\r\n                this.clear();\r\n            });\r\n        });\r\n    };\r\n    handleOpenModal() {\r\n        this.selectors.addCardButton.onclick = () => {\r\n            this.cardModal.show();\r\n        }\r\n    };\r\n    clear() {\r\n        this.cardNumber = '';\r\n        this.cardComment = '';\r\n        this.cardLogoImage = '';\r\n        this.selectors.commentInput.value = '';\r\n        this.selectors.numberInput.value = '';\r\n    };\r\n}","import Card from './Card';\r\n\r\nconst emptyContainerText = 'Your card list is empty, try add new cards using \\'Add\\' button above';\r\nconst localStorageName = 'cards-list';\r\n\r\nexport default class {\r\n    constructor(containerSelector, deleteConfirmModal) {\r\n        this.cards = [];\r\n        this.containerSelector = containerSelector;\r\n        this.deleteConfirmModal = deleteConfirmModal;\r\n\r\n        this.cardsToObjects();\r\n        this.updateCardsContainer();\r\n    };\r\n    add(card) {\r\n        this.cards.push(card);\r\n        this.updateCardsContainer();\r\n    };\r\n    remove(cardId) {\r\n        this.cards = this.cards.filter(item => item.id !== cardId);\r\n        this.updateCardsContainer();\r\n    };\r\n    updateCardsContainer() {\r\n        this.containerSelector.innerHTML = '';\r\n        if(this.cards.length > 0) {\r\n            this.cards.forEach(card => {\r\n                this.containerSelector.append(card.getAsHtml(() => { \r\n                    this.deleteConfirmModal.show();\r\n                    this.deleteConfirmModal.saveButtonHandler(() => {\r\n                        this.remove(card.id);\r\n                        this.deleteConfirmModal.hide();\r\n                    })\r\n                }));\r\n            });\r\n        } else {\r\n            this.containerSelector.innerText = emptyContainerText; \r\n        }\r\n        localStorage.setItem(localStorageName, JSON.stringify(this.cards));\r\n    };\r\n    cardsToObjects() {\r\n        let cardsArray = JSON.parse(localStorage.getItem(localStorageName));\r\n        if (cardsArray) {\r\n            cardsArray.forEach( item => {\r\n                this.cards.push(new Card(item));\r\n            });\r\n        }\r\n    };\r\n}","export default class {\r\n    constructor (modalSelector) {\r\n        this.modalSelector = modalSelector;\r\n        this.closeModalSelector = modalSelector.querySelector('.close');\r\n        this.saveModalSelector = modalSelector.querySelector('.save');\r\n\r\n        this.closeButtonHandler(() => {\r\n            this.hide();\r\n        });\r\n    };\r\n    show() {\r\n        this.modalSelector.classList.add('active');\r\n    };\r\n    hide() {\r\n        this.modalSelector.classList.remove('active');\r\n    };\r\n    disableButtons() {\r\n        this.closeModalSelector.setAttribute('disabled', 'disabled');\r\n        this.saveModalSelector.setAttribute('disabled', 'disabled');\r\n    };\r\n    enableButtons() {\r\n        this.closeModalSelector.removeAttribute('disabled');\r\n        this.saveModalSelector.removeAttribute('disabled');\r\n    };\r\n    closeButtonHandler(cb) {\r\n        this.closeModalSelector.onclick = cb;\r\n    };\r\n    saveButtonHandler(cb) {\r\n        this.saveModalSelector.onclick = cb;\r\n    }\r\n}","export default {\r\n    splitByFourNumbers(number) {\r\n        return `${number.slice(0, 4)} ${number.slice(4, 8)} ${number.slice(8, 12)} ${number.slice(12, 16)}`;\r\n    },\r\n    getFirstSixNumbers(number) {\r\n        return number.replace( /\\s/g, \"\").slice(0, 6);\r\n    },\r\n    removeSpaces(number) {\r\n        return number.replace( /\\s/g, \"\");\r\n    },\r\n}","import CardList from './classes/CardList.js';\r\nimport CardForm from './classes/CardForm.js';\r\nimport Modal from './classes/Modal.js';\r\n\r\n\r\nconst cardModal = new Modal(document.getElementById('cardModal'));\r\nconst deleteConfirmModal = new Modal(document.getElementById('deleteConfirmModal'));\r\n\r\nconst cardList = new CardList(document.getElementById('cardsContainer'), deleteConfirmModal);\r\n\r\nnew CardForm({\r\n        numberInput: document.querySelector('.card-number'),\r\n        numberError: document.querySelector('.card-number-error'),\r\n        commentInput: document.querySelector('.card-comment'),\r\n        commentError: document.querySelector('.card-comment-error'),\r\n        addCardButton: document.getElementById('addCard'),\r\n    }, \r\n    cardModal, \r\n    cardList,\r\n);\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}